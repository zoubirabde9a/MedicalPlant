// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MedicalPlant.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230722085738_update356")]
    partial class update356
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Model.Plant", b =>
                {
                    b.Property<long>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantId"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CommonName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OriginId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantClassId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantDivisionId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantFamilyId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantGenreId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantSpeciesId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.Property<long>("UsedPartId")
                        .HasColumnType("bigint");

                    b.Property<long>("VegetableReignId")
                        .HasColumnType("bigint");

                    b.HasKey("PlantId");

                    b.ToTable("PlantData");
                });

            modelBuilder.Entity("Model.PlantClass", b =>
                {
                    b.Property<long>("PlantClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantClassId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantClassId");

                    b.ToTable("PlantClassData");
                });

            modelBuilder.Entity("Model.PlantConstituent", b =>
                {
                    b.Property<long>("PlantConstituentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantConstituentId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantConstituentId");

                    b.ToTable("PlantConstituentData");
                });

            modelBuilder.Entity("Model.PlantConstituentEntry", b =>
                {
                    b.Property<long>("PlantConstituentEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantConstituentEntryId"));

                    b.Property<long>("PlantConstituentId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantId")
                        .HasColumnType("bigint");

                    b.HasKey("PlantConstituentEntryId");

                    b.ToTable("PlantConstituentEntryData");
                });

            modelBuilder.Entity("Model.PlantContraindication", b =>
                {
                    b.Property<long>("PlantContraindicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantContraindicationId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantContraindicationId");

                    b.ToTable("PlantContraindicationData");
                });

            modelBuilder.Entity("Model.PlantContraindicationEntry", b =>
                {
                    b.Property<long>("PlantContraindicationEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantContraindicationEntryId"));

                    b.Property<long>("PlantContraindicationId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantId")
                        .HasColumnType("bigint");

                    b.HasKey("PlantContraindicationEntryId");

                    b.ToTable("PlantContraindicationEntryData");
                });

            modelBuilder.Entity("Model.PlantDivision", b =>
                {
                    b.Property<long>("PlantDivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantDivisionId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantDivisionId");

                    b.ToTable("PlantDivisionData");
                });

            modelBuilder.Entity("Model.PlantEffect", b =>
                {
                    b.Property<long>("PlantEffectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantEffectId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantEffectId");

                    b.ToTable("PlantEffectData");
                });

            modelBuilder.Entity("Model.PlantEffectEntry", b =>
                {
                    b.Property<long>("PlantEffectEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantEffectEntryId"));

                    b.Property<long>("PlantEffectId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantId")
                        .HasColumnType("bigint");

                    b.HasKey("PlantEffectEntryId");

                    b.ToTable("PlantEffectEntryData");
                });

            modelBuilder.Entity("Model.PlantFamily", b =>
                {
                    b.Property<long>("PlantFamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantFamilyId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantFamilyId");

                    b.ToTable("PlantFamilyData");
                });

            modelBuilder.Entity("Model.PlantGenre", b =>
                {
                    b.Property<long>("PlantGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantGenreId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantGenreId");

                    b.ToTable("PlantGenreData");
                });

            modelBuilder.Entity("Model.PlantIndication", b =>
                {
                    b.Property<long>("PlantIndicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantIndicationId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantIndicationId");

                    b.ToTable("PlantIndicationData");
                });

            modelBuilder.Entity("Model.PlantIndicationEntry", b =>
                {
                    b.Property<long>("PlantIndicationEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantIndicationEntryId"));

                    b.Property<long>("PlantId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantIndicationId")
                        .HasColumnType("bigint");

                    b.HasKey("PlantIndicationEntryId");

                    b.ToTable("PlantIndicationEntryData");
                });

            modelBuilder.Entity("Model.PlantNegativeEffect", b =>
                {
                    b.Property<long>("PlantNegativeEffectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantNegativeEffectId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantNegativeEffectId");

                    b.ToTable("PlantNegativeEffectData");
                });

            modelBuilder.Entity("Model.PlantNegativeEffectEntry", b =>
                {
                    b.Property<long>("PlantNegativeEffectEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantNegativeEffectEntryId"));

                    b.Property<long>("PlantId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlantNegativeEffectId")
                        .HasColumnType("bigint");

                    b.HasKey("PlantNegativeEffectEntryId");

                    b.ToTable("PlantNegativeEffectEntryData");
                });

            modelBuilder.Entity("Model.PlantOrigin", b =>
                {
                    b.Property<long>("PlantOriginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantOriginId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantOriginId");

                    b.ToTable("PlantOriginData");
                });

            modelBuilder.Entity("Model.PlantPart", b =>
                {
                    b.Property<long>("PlantPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantPartId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantPartId");

                    b.ToTable("PlantPartData");
                });

            modelBuilder.Entity("Model.PlantSpecies", b =>
                {
                    b.Property<long>("PlantSpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlantSpeciesId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("PlantSpeciesId");

                    b.ToTable("PlantSpeciesData");
                });

            modelBuilder.Entity("Model.VegetableReign", b =>
                {
                    b.Property<long>("VegetableReignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("VegetableReignId"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.HasKey("VegetableReignId");

                    b.ToTable("VegetableReignData");
                });
#pragma warning restore 612, 618
        }
    }
}
